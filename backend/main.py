from fastapi import FastAPI
from api.routes import router as api_router
from fastapi.middleware.cors import CORSMiddleware
from contextlib import asynccontextmanager
from concurrent.futures import ProcessPoolExecutor
import asyncio
import os

from services.scheduler import Scheduler
from services.config_loader import ConfigLoader
from database import init_db
from utils import SimpleFileLock


@asynccontextmanager
async def lifespan(app: FastAPI):
    app.state.forecasting_process_pool = ProcessPoolExecutor(os.cpu_count() * 2)

    # –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ —Ç–æ–ª—å–∫–æ –≤ –æ–¥–Ω–æ–º –∏–∑ –≤–æ—Ä–∫–µ—Ä–æ–≤
    lock = SimpleFileLock('/tmp/scheduler.lock')
    if lock.acquire():
        print("üîÑ [Master] Initializing scheduler")
        init_db()

        # –ü—É–ª –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ 
        app.state.scheduler_proccess_pool = ProcessPoolExecutor(os.cpu_count())
        config_loader = ConfigLoader("./services/scheduler_config.yml")
        tasks_config = config_loader.tasks
        app.state.scheduler = Scheduler(tasks_config, app.state.scheduler_proccess_pool)

        print("Starting a scheduler")
        asyncio.create_task(app.state.scheduler.start())
        print("Scheduler started")
    else: 
        print("üîÑ Scheduler running in another worker")
        
    yield

    if hasattr(app.state, "scheduler"):
        print("üõë Stopping scheduler")
        await app.state.scheduler.stop()
        app.state.scheduler_proccess_pool.shutdown(wait=True)
        lock.release()

    app.state.forecasting_process_pool.shutdown(wait=True)


app = FastAPI(title="Forecasting API", lifespan=lifespan)

# –ü–æ–¥–∫–ª—é—á–∞–µ–º –º–∞—Ä—à—Ä—É—Ç—ã
app.include_router(api_router, prefix="/api")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ CORS: —Ä–∞–∑—Ä–µ—à–∞–µ–º –¥–æ—Å—Ç—É–ø —Å –Ω—É–∂–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞)
app.add_middleware(
    CORSMiddleware,
    allow_origins=[
        # "http://localhost:80",    # CORS –Ω–µ –Ω—É–∂–Ω—ã —Ç.–∫. –∑–∞–ø—Ä–æ—Å—ã —Å —Ñ—Ä–æ–Ω—Ç–∞ –ø—Ä–æ–∫—Å–∏—Ä—É—é—Ç—Å—è —á–µ—Ä–µ–∑ Nginx
        "http://localhost:3030"   # frontend-dev
    ],  
    allow_credentials=True,
    allow_methods=["*"],  # –†–∞–∑—Ä–µ—à–∞–µ–º –≤—Å–µ –º–µ—Ç–æ–¥—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä, GET, POST
    allow_headers=["*"],  # –†–∞–∑—Ä–µ—à–∞–µ–º –≤—Å–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏
)