name: CI/CD Deploy to VPS

on:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build & Push Backend
        run: |
          docker buildx build \
            --push \
            --tag ghcr.io/${{ github.repository_owner }}/predictify-backend:latest \
            --cache-from=type=registry,ref=ghcr.io/${{ github.repository_owner }}/predictify-backend:cache \
            --cache-to=type=inline \
            ./backend

      - name: Build & Push Frontend
        run: |
          docker buildx build \
            --push \
            --tag ghcr.io/${{ github.repository_owner }}/predictify-frontend:latest \
            --cache-from=type=registry,ref=ghcr.io/${{ github.repository_owner }}/predictify-frontend:cache \
            --cache-to=type=inline \
            ./frontend

      - name: Build & Push Scheduler
        run: |
          docker buildx build \
            --push \
            --file scheduler/Dockerfile \
            --tag ghcr.io/${{ github.repository_owner }}/predictify-scheduler:latest \
            --cache-from=type=registry,ref=ghcr.io/${{ github.repository_owner }}/predictify-scheduler:cache \
            --cache-to=type=inline \
            .

      - name: Build & Push Database
        run: |
          docker buildx build \
            --push \
            --tag ghcr.io/${{ github.repository_owner }}/predictify-database:latest \
            --cache-from=type=registry,ref=ghcr.io/${{ github.repository_owner }}/predictify-database:cache \
            --cache-to=type=inline \
            ./database

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      
      - name: Remove old docker-compose.yml on VPS
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_SSH_PORT }}
          script: |
            rm -f /home/${{ secrets.VPS_USER }}/project/docker-compose.yml

      - name: Copy docker-compose.yml to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_SSH_PORT }}
          source: "docker-compose.yml"
          target: "/home/${{ secrets.VPS_USER }}/project/docker-compose.yml"

      - name: Deploy on VPS
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_SSH_PORT }}
          script: |
            cd /home/${{ secrets.VPS_USER }}/project
            docker compose down
            docker compose pull
            docker compose up -d
